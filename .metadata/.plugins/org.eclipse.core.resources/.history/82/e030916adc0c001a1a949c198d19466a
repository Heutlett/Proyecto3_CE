package cr.ac.tec.graph.api.resources;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

import cr.ac.tec.graph.api.dto.Edge;
import cr.ac.tec.graph.api.dto.Entity;
import cr.ac.tec.graph.api.dto.Graph;
import cr.ac.tec.graph.api.dto.Node;
import cr.ac.tec.graph.api.dto.ObjectDijkstra;
import cr.ac.tec.graph.api.dto.QueryStringDegree;
import cr.ac.tec.graph.api.dto.QueryStringDijkstra;
import cr.ac.tec.graph.api.util.DGraph;
import cr.ac.tec.graph.api.util.Dijkstra;
import cr.ac.tec.graph.api.util.MatrizAdyacencia;

public class GraphDijkstraResource {
	
	private Graph g;
	
	public GraphDijkstraResource(Graph g) {
		this.g = g;
	}
	
	/**
	 * Devuelve la lista de grafos
	 * @return
	 */
	@GET
	@Consumes("application/json")
	@Produces("application/json")
	public Response getGraphs(QueryStringDijkstra string) {
		/*
		Graph g = new Graph();
		
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));
		
		
		g.getEdges().add(new Edge("telefono0", "telefono0", 0));
		g.getEdges().add(new Edge("telefono0", "telefono1", 16));
		g.getEdges().add(new Edge("telefono0", "telefono2", 10));
		g.getEdges().add(new Edge("telefono0", "telefono3", 5));
		g.getEdges().add(new Edge("telefono0", "telefono4", 999999999));
		g.getEdges().add(new Edge("telefono0", "telefono5", 999999999));
		g.getEdges().add(new Edge("telefono0", "telefono6", 999999999));
		g.getEdges().add(new Edge("telefono0", "telefono7", 999999999));
		
		g.getEdges().add(new Edge("telefono1", "telefono0", 16));
		g.getEdges().add(new Edge("telefono1", "telefono1", 0));
		g.getEdges().add(new Edge("telefono1", "telefono2", 2));
		g.getEdges().add(new Edge("telefono1", "telefono3", 999999999));
		g.getEdges().add(new Edge("telefono1", "telefono4", 999999999));
		g.getEdges().add(new Edge("telefono1", "telefono5", 4));
		g.getEdges().add(new Edge("telefono1", "telefono6", 6));
		g.getEdges().add(new Edge("telefono1", "telefono7", 999999999));
		
		g.getEdges().add(new Edge("telefono2", "telefono0", 10));
		g.getEdges().add(new Edge("telefono2", "telefono1", 2));
		g.getEdges().add(new Edge("telefono2", "telefono2", 0));
		g.getEdges().add(new Edge("telefono2", "telefono3", 4));
		g.getEdges().add(new Edge("telefono2", "telefono4", 10));
		g.getEdges().add(new Edge("telefono2", "telefono5", 12));
		g.getEdges().add(new Edge("telefono2", "telefono6", 999999999));
		g.getEdges().add(new Edge("telefono2", "telefono7", 999999999));
		

		g.getEdges().add(new Edge("telefono3", "telefono0", 5));
		g.getEdges().add(new Edge("telefono3", "telefono1", 999999999));
		g.getEdges().add(new Edge("telefono3", "telefono2", 4));
		g.getEdges().add(new Edge("telefono3", "telefono3", 0));
		g.getEdges().add(new Edge("telefono3", "telefono4", 15));
		g.getEdges().add(new Edge("telefono3", "telefono5", 999999999));
		g.getEdges().add(new Edge("telefono3", "telefono6", 999999999));
		g.getEdges().add(new Edge("telefono3", "telefono7", 999999999));
		
		
		g.getEdges().add(new Edge("telefono4", "telefono0", 999999999));
		g.getEdges().add(new Edge("telefono4", "telefono1", 999999999));
		g.getEdges().add(new Edge("telefono4", "telefono2", 10));
		g.getEdges().add(new Edge("telefono4", "telefono3", 15));
		g.getEdges().add(new Edge("telefono4", "telefono4", 0));
		g.getEdges().add(new Edge("telefono4", "telefono5", 3));
		g.getEdges().add(new Edge("telefono4", "telefono6", 999999999));
		g.getEdges().add(new Edge("telefono4", "telefono7", 5));
		

		g.getEdges().add(new Edge("telefono5", "telefono0", 999999999));
		g.getEdges().add(new Edge("telefono5", "telefono1", 4));
		g.getEdges().add(new Edge("telefono5", "telefono2", 12));
		g.getEdges().add(new Edge("telefono5", "telefono3", 999999999));
		g.getEdges().add(new Edge("telefono5", "telefono4", 3));
		g.getEdges().add(new Edge("telefono5", "telefono5", 0));
		g.getEdges().add(new Edge("telefono5", "telefono6", 8));
		g.getEdges().add(new Edge("telefono5", "telefono7", 16));
		
		
		g.getEdges().add(new Edge("telefono6", "telefono0", 999999999));
		g.getEdges().add(new Edge("telefono6", "telefono1", 6));
		g.getEdges().add(new Edge("telefono6", "telefono2", 999999999));
		g.getEdges().add(new Edge("telefono6", "telefono3", 999999999));
		g.getEdges().add(new Edge("telefono6", "telefono4", 999999999));
		g.getEdges().add(new Edge("telefono6", "telefono5", 8));
		g.getEdges().add(new Edge("telefono6", "telefono6", 0));
		g.getEdges().add(new Edge("telefono6", "telefono7", 7));
		
		long matriz[][] = { {0, 16, 10, 5, 999999999, 999999999, 999999999, 999999999},
				{16, 0, 2, 999999999, 999999999, 4, 6, 999999999},
				{10, 2, 0, 4, 10, 12, 999999999,999999999},
				{5, 999999999, 4, 0, 15, 999999999, 999999999, 999999999},
				{999999999, 999999999, 10, 15, 0, 3, 999999999, 5},
				{999999999, 4, 12, 999999999, 3, 0, 8, 16},
				{999999999, 6, 999999999, 999999999, 999999999, 8, 0, 7},
				{999999999, 999999999, 999999999, 999999999, 5, 16, 17, 0} };
		
		g.getEdges().add(new Edge("telefono7", "telefono0", 999999999));
		g.getEdges().add(new Edge("telefono7", "telefono1", 999999999));
		g.getEdges().add(new Edge("telefono7", "telefono2", 999999999));
		g.getEdges().add(new Edge("telefono7", "telefono3", 999999999));
		g.getEdges().add(new Edge("telefono7", "telefono4", 5));
		g.getEdges().add(new Edge("telefono7", "telefono5", 16));
		g.getEdges().add(new Edge("telefono7", "telefono6", 17));
		g.getEdges().add(new Edge("telefono7", "telefono7", 0));
		
		
		*/
		
		Graph g = new Graph();
		
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));
		g.getNodes().add(new Node(new Entity("0")));

		
		g.getEdges().add(new Edge("telefono0", "telefono0", 0));
		g.getEdges().add(new Edge("telefono0", "telefono1", 3));
		g.getEdges().add(new Edge("telefono0", "telefono2", 999999999));
		g.getEdges().add(new Edge("telefono0", "telefono3", 7));

		g.getEdges().add(new Edge("telefono1", "telefono0", 3));
		g.getEdges().add(new Edge("telefono1", "telefono1", 0));
		g.getEdges().add(new Edge("telefono1", "telefono2", 4));
		g.getEdges().add(new Edge("telefono1", "telefono3", 2));

		g.getEdges().add(new Edge("telefono2", "telefono0", 999999999));
		g.getEdges().add(new Edge("telefono2", "telefono1", 4));
		g.getEdges().add(new Edge("telefono2", "telefono2", 0));
		g.getEdges().add(new Edge("telefono2", "telefono3", 5));
		
		g.getEdges().add(new Edge("telefono3", "telefono0", 7));
		g.getEdges().add(new Edge("telefono3", "telefono1", 2));
		g.getEdges().add(new Edge("telefono3", "telefono2", 5));
		g.getEdges().add(new Edge("telefono3", "telefono3", 0));

		
		ObjectDijkstra o = MatrizAdyacencia.generarMatriz(g).encontrarRutaMinimaDijkstra(string.getStartNode(), string.getEndNode());
		
		String [] ids = o.getRuta();
		Node[] nodes = new Node[ids.length];
		
		for(int i = 0; i < ids.length; i++) {
			
			for(int e = 0; e < g.getNodes().size(); e++) {
				
				
				
				if(ids[i].substring(4).equals(g.getNodes().get(e).getId())) {
					nodes[i] = g.getNodes().get(e);
				}
				
			}
			
		}
		
			
		return Response.status(200)
				.entity(new ObjectDijkstra(o.getValorCamino(), nodes))
				.build();
		
	}

}
