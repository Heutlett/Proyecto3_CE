package cr.ac.tec.graph.api.resources;

import javax.ws.rs.DELETE;
import javax.ws.rs.Produces;
import javax.ws.rs.core.Response;

import cr.ac.tec.graph.api.dto.DB;
import cr.ac.tec.graph.api.dto.Graph;
import cr.ac.tec.graph.api.dto.Node;

public class NodeResource {

	private String idNode;
	private Graph g;
	
	public NodeResource(Graph g, String idNode) {
		this.idNode = idNode;
		this.g = g;
	}
	
	/**
	 * Elimina el nodo con el id pasado por parametro 
	 * @return
	 */
	@DELETE
	@Produces("application/json")
	public Response deleteGraphData() {
		
		if(g != null) {
			for(int i = 0; i < g.getNodes().size(); i++) {
				if(g.getNodes().get(i).getId().equals(idNode)) {
					g.getNodes().remove(n);
				}
			}
			return Response.status(200)
					.entity(DB.grafos.get(g))
					.build();
		}
		return Response.status(404).entity("NO ESTA")
				.build();
	}
	
}
